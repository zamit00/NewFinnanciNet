// Risk Quest Modal Functions

let currentQuestion = 0;
let riskAnswers = {};

function openRiskQuestModal() {
    const modal = document.getElementById('riskQuestModal');
    if (modal) {
        modal.classList.add('show');
        document.body.style.overflow = 'hidden';
        resetRiskQuest();
    }
}

function closeRiskQuestModal() {
    const modal = document.getElementById('riskQuestModal');
    if (modal) {
        modal.classList.remove('show');
        document.body.style.overflow = 'auto';
    }
}

function startRiskQuest() {
    document.getElementById('riskIntro').style.display = 'none';
    document.getElementById('riskQuestion1').classList.add('active');
    currentQuestion = 1;
    updateProgress();
}

function selectRiskOption(questionNum, value, element) {
    // Save answer
    riskAnswers[`q${questionNum}`] = value;
    
    // Update UI
    const container = element.closest('.risk-question-container');
    container.querySelectorAll('.risk-option').forEach(opt => {
        opt.classList.remove('selected');
    });
    element.classList.add('selected');
    
    // Check the radio button
    const radio = element.querySelector('input[type="radio"]');
    if (radio) {
        radio.checked = true;
    }
    
    // Enable next button
    const nextBtn = document.getElementById(`nextBtn${questionNum}`);
    if (nextBtn) {
        nextBtn.disabled = false;
    }
}

function nextRiskQuestion(nextNum) {
    // Hide current question
    const currentContainer = document.getElementById(`riskQuestion${currentQuestion}`);
    if (currentContainer) {
        currentContainer.classList.remove('active');
    }
    
    // Show next question
    const nextContainer = document.getElementById(`riskQuestion${nextNum}`);
    if (nextContainer) {
        nextContainer.classList.add('active');
        currentQuestion = nextNum;
        updateProgress();
    }
}

function prevRiskQuestion(prevNum) {
    // Hide current question
    const currentContainer = document.getElementById(`riskQuestion${currentQuestion}`);
    if (currentContainer) {
        currentContainer.classList.remove('active');
    }
    
    // Show previous question
    const prevContainer = document.getElementById(`riskQuestion${prevNum}`);
    if (prevContainer) {
        prevContainer.classList.add('active');
        currentQuestion = prevNum;
        updateProgress();
    }
}

function updateProgress() {
    const progressFill = document.getElementById('riskProgressFill');
    const progressText = document.getElementById('riskProgressText');
    
    if (currentQuestion === 0) {
        progressFill.style.width = '0%';
        progressText.textContent = '◊î◊ß◊ì◊û◊î';
    } else {
        const percentage = (currentQuestion / 6) * 100;
        progressFill.style.width = percentage + '%';
        progressText.textContent = `◊©◊ê◊ú◊î ${currentQuestion} ◊û◊™◊ï◊ö 6`;
    }
}

function calculateRiskScore() {
    // Check all questions answered
    if (Object.keys(riskAnswers).length < 6) {
        alert('◊ê◊†◊ê ◊¢◊†◊î ◊¢◊ú ◊õ◊ú ◊î◊©◊ê◊ú◊ï◊™');
        return;
    }
    
    // Calculate total score
    let totalScore = 0;
    for (let key in riskAnswers) {
        totalScore += riskAnswers[key];
    }
    
    // Hide question 6
    document.getElementById('riskQuestion6').classList.remove('active');
    
    // Determine risk level and explanation
    let riskLevel, explanation, icon, levelClass;
    
    if (totalScore <= 7) {
        riskLevel = "◊°◊ô◊õ◊ï◊ü ◊†◊û◊ï◊ö";
        levelClass = "low";
        icon = "üõ°Ô∏è";
        explanation = '◊ë◊î◊™◊ê◊ù ◊ú◊™◊©◊ï◊ë◊ï◊™◊ô◊ö ◊ú◊©◊ê◊ú◊ï◊ü ◊†◊®◊ê◊î ◊õ◊ô ◊ê◊™◊î ◊û◊©◊ß◊ô◊¢ ◊°◊ï◊ú◊ô◊ì◊ô ◊ê◊©◊® ◊ê◊ô◊†◊ï ◊ê◊ï◊î◊ë ◊°◊ô◊õ◊ï◊ü ◊ï◊î◊õ◊°◊§◊ô◊ù ◊©◊û◊ô◊ï◊¢◊ì◊ô◊ù ◊ú◊î◊©◊ß◊¢◊î ◊ê◊ô◊†◊ù ◊ô◊õ◊ï◊ú◊ô◊ù ◊ú◊°◊ë◊ï◊ú ◊î◊§◊°◊ì◊ô◊ù ◊û◊ë◊ó◊ô◊†◊™◊ö. ◊î◊û◊°◊ú◊ï◊ú◊ô◊ù ◊î◊û◊™◊ê◊ô◊û◊ô◊ù ◊ú◊î◊©◊ß◊¢◊™◊ö ◊î◊ù ◊ê◊ú◊î ◊ê◊©◊® ◊ë◊¢◊ú◊ô ◊™◊†◊ï◊ì◊™◊ô◊ï◊™ ◊†◊û◊ï◊õ◊î ◊¢◊ù ◊ó◊©◊ô◊§◊î ◊†◊û◊ï◊õ◊î ◊ú◊û◊†◊ô◊ï◊™. ◊û◊°◊ú◊ï◊ú◊ô◊ù ◊õ◊û◊ï ◊õ◊°◊§◊ô ◊©◊ß◊ú◊ô, ◊ê◊í"◊ó ◊û◊û◊©◊ú◊ï◊™ ◊ï◊ê◊§◊ô◊ú◊ï ◊ê◊©◊®◊ê◊ô ◊ï◊ê◊í"◊ó. ◊ë◊ë◊ó◊ô◊®◊™ ◊î◊î◊©◊ß◊¢◊î ◊ó◊©◊ï◊ë ◊ú◊î◊™◊ô◊ô◊¢◊• ◊¢◊ù ◊ë◊¢◊ú ◊®◊ô◊©◊ô◊ï◊ü ◊§◊†◊°◊ô◊ï◊†◊ô ◊ê◊ï ◊ô◊ï◊¢◊• ◊î◊©◊ß◊¢◊ï◊™ ◊û◊ï◊°◊û◊ö ◊õ◊ì◊ô ◊©◊ô◊™◊ê◊ô◊ù ◊ú◊ö ◊ê◊™ ◊î◊î◊©◊ß◊¢◊î ◊î◊û◊™◊ê◊ô◊û◊î ◊ú◊¶◊®◊õ◊ô◊ù ◊©◊ú◊ö.';
    } else if (totalScore <= 12) {
        riskLevel = "◊°◊ô◊õ◊ï◊ü ◊ë◊ô◊†◊ï◊†◊ô";
        levelClass = "medium";
        icon = "‚öñÔ∏è";
        explanation = "◊ë◊î◊™◊ê◊ù ◊ú◊™◊©◊ï◊ë◊ï◊™◊ô◊ö ◊ú◊©◊ê◊ú◊ï◊ü ◊†◊®◊ê◊î ◊õ◊ô ◊ê◊™◊î ◊û◊©◊ß◊ô◊¢ ◊ê◊©◊® ◊û◊ï◊õ◊ü ◊ú◊ß◊ó◊™ ◊°◊ô◊õ◊ï◊†◊ô◊ù ◊ê◊ë◊ú ◊ë◊û◊ô◊ì◊™ ◊û◊î. ◊ê◊™◊î ◊û◊°◊ï◊í◊ú ◊ú◊°◊§◊ï◊í ◊ï◊ú◊î◊õ◊ô◊ú ◊î◊§◊°◊ì◊ô◊ù ◊ê◊ë◊ú ◊¢◊ì ◊í◊ë◊ï◊ú ◊û◊°◊ï◊ô◊ù. ◊ê◊†◊ô ◊û◊†◊ô◊ó ◊©◊ê◊™◊î ◊û◊ó◊§◊© ◊®◊ï◊ï◊ó◊ô◊ù ◊û◊¢◊ë◊® ◊ú◊®◊ï◊ï◊ó◊ô◊ù ◊î◊†◊ô◊™◊†◊ô◊ù ◊ë◊û◊°◊ú◊ï◊ú◊ô◊ù ◊î◊©◊ô◊ß◊ú◊ô◊ô◊ù ◊õ◊í◊ï◊ü ◊§◊ô◊ß◊ì◊ï◊†◊ï◊™ ◊ë◊†◊ß◊ê◊ô◊ô◊ù ◊ï◊ß◊®◊†◊ï◊™ ◊õ◊°◊§◊ô◊ï◊™. ◊î◊û◊°◊ú◊ï◊ú◊ô◊ù ◊î◊û◊™◊ê◊ô◊û◊ô◊ù ◊ú◊î◊©◊ß◊¢◊™◊ö ◊î◊ù ◊ê◊ú◊î ◊ê◊©◊® ◊ë◊¢◊ú◊ô ◊™◊†◊ï◊ì◊™◊ô◊ï◊™ ◊ë◊ô◊†◊ï◊†◊ô◊™ ◊¢◊ù ◊ó◊©◊ô◊§◊î ◊ë◊ô◊†◊ï◊†◊ô◊™ ◊ú◊û◊†◊ô◊ï◊™. ◊û◊°◊ú◊ï◊ú◊ô◊ù ◊õ◊û◊ï ◊õ◊ú◊ú◊ô, ◊ú◊ë◊†◊ô 50 ◊¢◊ì 60. ◊ë◊ë◊ó◊ô◊®◊™ ◊î◊î◊©◊ß◊¢◊î ◊ó◊©◊ï◊ë ◊ú◊î◊™◊ô◊ô◊¢◊• ◊¢◊ù ◊ë◊¢◊ú ◊®◊ô◊©◊ô◊ï◊ü ◊§◊†◊°◊ô◊ï◊†◊ô ◊ê◊ï ◊ô◊ï◊¢◊• ◊î◊©◊ß◊¢◊ï◊™ ◊û◊ï◊°◊û◊ö ◊õ◊ì◊ô ◊©◊ô◊™◊ê◊ô◊ù ◊ú◊ö ◊ê◊™ ◊î◊î◊©◊ß◊¢◊î ◊î◊û◊™◊ê◊ô◊û◊î ◊ú◊¶◊®◊õ◊ô◊ù ◊©◊ú◊ö.";
    } else {
        riskLevel = "◊°◊ô◊õ◊ï◊ü ◊í◊ë◊ï◊î";
        levelClass = "high";
        icon = "üöÄ";
        explanation = "◊ë◊î◊™◊ê◊ù ◊ú◊™◊©◊ï◊ë◊ï◊™◊ô◊ö ◊ú◊©◊ê◊ú◊ï◊ü ◊†◊®◊ê◊î ◊õ◊ô ◊ê◊™◊î ◊û◊©◊ß◊ô◊¢ ◊ê◊©◊® ◊û◊¶◊§◊î ◊ú◊™◊©◊ï◊ê◊î ◊í◊ë◊ï◊î◊î ◊¢◊ú ◊î◊î◊©◊ß◊¢◊î ◊©◊ú◊ö ◊™◊ï◊ö ◊ú◊ß◊ô◊ó◊™ ◊°◊ô◊õ◊ï◊†◊ô◊ù ◊ë◊®◊û◊î ◊í◊ë◊ï◊î◊î. ◊ê◊™◊î ◊û◊°◊ï◊í◊ú ◊ú◊°◊§◊ï◊í ◊ï◊ú◊î◊õ◊ô◊ú ◊î◊§◊°◊ì◊ô◊ù. ◊ó◊©◊ï◊ë ◊ú◊î◊ë◊ô◊ü ◊©◊î◊©◊ß◊¢◊î ◊õ◊ñ◊ï ◊¶◊®◊ô◊õ◊î ◊ú◊î◊ô◊ï◊™ ◊û◊ê◊ï◊§◊ô◊ô◊†◊™ ◊õ◊î◊©◊ß◊¢◊î ◊ú◊ò◊ï◊ï◊ó ◊î◊ê◊®◊ï◊ö ◊õ◊ì◊ô ◊ú◊ì◊¢◊™ ◊ú◊î◊õ◊ô◊ú ◊í◊ù ◊ô◊®◊ô◊ì◊ï◊™ ◊ë◊©◊ï◊ß ◊î◊î◊ï◊ü ◊ï◊™◊ß◊ï◊§◊ï◊™ ◊û◊©◊ë◊®. ◊î◊û◊°◊ú◊ï◊ú◊ô◊ù ◊î◊û◊™◊ê◊ô◊û◊ô◊ù ◊ú◊î◊©◊ß◊¢◊™◊ö ◊î◊ù ◊ê◊ú◊î ◊ê◊©◊® ◊ë◊¢◊ú◊ô ◊™◊†◊ï◊ì◊™◊ô◊ï◊™ ◊í◊ë◊ï◊î◊î ◊¢◊ù ◊ó◊©◊ô◊§◊î ◊í◊ë◊ï◊î◊î ◊ú◊û◊†◊ô◊ï◊™. ◊û◊°◊ú◊ï◊ú◊ô◊ù ◊õ◊û◊ï ◊û◊†◊ô◊ô◊™◊ô, ◊¢◊ï◊ß◊ë ◊û◊ì◊ì sp500, ◊¢◊ï◊ß◊ë◊ô ◊û◊ì◊ì◊ô ◊û◊†◊ô◊ï◊™, ◊û◊†◊ô◊ï◊™ ◊°◊ó◊ô◊®. ◊ë◊ë◊ó◊ô◊®◊™ ◊î◊î◊©◊ß◊¢◊î ◊ó◊©◊ï◊ë ◊ú◊î◊™◊ô◊ô◊¢◊• ◊¢◊ù ◊ë◊¢◊ú ◊®◊ô◊©◊ô◊ï◊ü ◊§◊†◊°◊ô◊ï◊†◊ô ◊ê◊ï ◊ô◊ï◊¢◊• ◊î◊©◊ß◊¢◊ï◊™ ◊û◊ï◊°◊û◊ö ◊õ◊ì◊ô ◊©◊ô◊™◊ê◊ô◊ù ◊ú◊ö ◊ê◊™ ◊î◊î◊©◊ß◊¢◊î ◊î◊û◊™◊ê◊ô◊û◊î ◊ú◊¶◊®◊õ◊ô◊ù ◊©◊ú◊ö.";
    }
    
    // Update progress to 100%
    document.getElementById('riskProgressFill').style.width = '100%';
    document.getElementById('riskProgressText').textContent = '◊î◊ï◊©◊ú◊ù! ‚úÖ';
    
    // Show results
    document.getElementById('riskResultIcon').textContent = icon;
    document.getElementById('riskResultLevel').textContent = riskLevel;
    document.getElementById('riskResultLevel').className = `risk-result-level ${levelClass}`;
    document.getElementById('riskResultExplanation').textContent = explanation;
    document.getElementById('riskResult').classList.add('show');
}

function resetRiskQuest() {
    // Reset all data
    currentQuestion = 0;
    riskAnswers = {};
    
    // Reset UI
    document.querySelectorAll('.risk-question-container').forEach(container => {
        container.classList.remove('active');
    });
    
    document.querySelectorAll('.risk-option').forEach(opt => {
        opt.classList.remove('selected');
    });
    
    document.querySelectorAll('input[type="radio"]').forEach(radio => {
        radio.checked = false;
    });
    
    document.querySelectorAll('[id^="nextBtn"]').forEach(btn => {
        btn.disabled = true;
    });
    
    // Show intro
    document.getElementById('riskIntro').style.display = 'block';
    document.getElementById('riskResult').classList.remove('show');
    
    // Reset progress
    updateProgress();
}

// Close modal when clicking outside
window.addEventListener('click', function(event) {
    const modal = document.getElementById('riskQuestModal');
    if (event.target === modal) {
        closeRiskQuestModal();
    }
});

// Close modal with ESC key
document.addEventListener('keydown', function(event) {
    if (event.key === 'Escape') {
        const modal = document.getElementById('riskQuestModal');
        if (modal && modal.classList.contains('show')) {
            closeRiskQuestModal();
        }
    }
});

